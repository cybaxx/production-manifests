# traefik "dynamic" config

# development env setup
# so no tls anything
http:
  routers:
    # wetfish.net blogpost frontpage
    fishblog:
      entrypoints:
        - "websecure"
      rule: "Host(`wetfish.net`)"
      tls:
        certResolver: letsencrypt
        options:
          - mintlsversion
      middlewares:
        - "ipwhitelist-cloudflare"
      service: "fishblog"
    
    # danger.wetfish.net
    danger:
      entrypoints:
       - "websecure"
      rule: "Host(`danger.wetfish.net`)"
      tls:
        certResolver: letsencrypt
        options:
          - mintlsversion
      middlewares:
        - "ipwhitelist-cloudflare"
      service: "danger"

    # wetfishonline.com
    online:
      entrypoints:
        - "websecure"
      rule: "Host(`wetfishonline.com`)"
      tls:
        certResolver: letsencrypt
        options:
          - mintlsversion
      middlewares:
        - "ipwhitelist-cloudflare"
      service: "online"
    
    # glitch.wetfish.net
    glitch:
      entrypoints:
        - "websecure"
      rule: "Host(`glitch.wetfish.net`)"
      tls:
        certResolver: letsencrypt
        options:
          - mintlsversion
      middlewares:
        - "ipwhitelist-cloudflare"
      service: "glitch"

    # click.wetfish.net
    click:
      entrypoints:
        - "websecure"
      rule: "Host(`click.wetfish.net`)"
      tls:
        certResolver: letsencrypt
        options:
          - mintlsversion
      middlewares:
        - "ipwhitelist-cloudflare"
      service: "click"

    # wiki.wetfish.net
    wiki:
      entrypoints:
        - "websecure"
      rule: "Host(`wiki.wetfish.net`)"
      tls:
        certResolver: letsencrypt
        options:
          - mintlsversion
      middlewares:
        - "ipwhitelist-cloudflare"
      service: "wiki"

  services:
    fishblog:
      loadBalancer:
        servers:
          # "container_name: fishblog-app" in blog compose stack
          - url: "http://fishblog-app.:2304"

    danger:
      loadBalancer:
        servers:
          # "container_name: danger-web" in danger compose stack
          - url: "http://danger-web.:80"

    online:
      loadBalancer:
        servers:
          # "container_name: online-web" in online compose stack
          - url: "http://online-web.:80"

    glitch:
      loadBalancer:
        servers:
          # "container_name: glitch-web" in glitch compose stack
          - url: "http://glitch-web.:80"

    click:
      loadBalancer:
        servers:
          # "container_name: click-web" in click compose stack
          - url: "http://click-web.:80"

    wiki:
      loadBalancer:
        servers:
          # "container_name: wiki-web" in wiki compose stack
          - url: "http://wiki-web.:80"

  middlewares:
    ipwhitelist-cloudflare:
      # only allow connections from cloudflare origin pull servers
      # https://www.cloudflare.com/ips-v4
      ipWhiteList:
        sourceRange:
          - 103.21.244.0/22
          - 103.22.200.0/22
          - 103.31.4.0/22
          - 104.16.0.0/13
          - 104.24.0.0/14
          - 108.162.192.0/18
          - 131.0.72.0/22
          - 141.101.64.0/18
          - 162.158.0.0/15
          - 172.64.0.0/13
          - 173.245.48.0/20
          - 188.114.96.0/20
          - 190.93.240.0/20
          - 197.234.240.0/22
          - 198.41.128.0/17

tls:
  options:
    mintlsversion:
      minVersion: VersionTLS12
      cipherSuites:
       # Recommended ciphers for TLSv1.2
       - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
       - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
       - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
       # Recommended ciphers for TLSv1.3
       - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
       - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
       - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
